services:
  # API server
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKERS_COUNT=3
    depends_on:
      - redis
    volumes:
      - ./data:/app/data
    networks:
      - mlapi-network

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - mlapi-network

  # High priority worker for facial and audio analysis
  high-worker:
    build: .
    command: python -m redisStore.worker high
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    volumes:
      - ./data:/app/data
    networks:
      - mlapi-network
    deploy:
      replicas: 2

  # Default worker for other tasks
  default-worker:
    build: .
    command: python -m redisStore.worker default
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    volumes:
      - ./data:/app/data
    networks:
      - mlapi-network
    deploy:
      replicas: 3

  # Worker monitor service
  monitor:
    build: .
    command: python -m redisStore.monitor
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - mlapi-network

networks:
  mlapi-network:
    driver: bridge

volumes:
  redis-data:
